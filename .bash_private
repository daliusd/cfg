export PATH=~/.local/bin:~/.npm-global/bin:~/Library/Python/3.7/bin:$PATH
export NODE_PATH=~/.npm-global/lib/node_modules/
# export PYTHONPATH=/home/dalius/.local/lib/python3.6/site-packages

export HISTCONTROL=ignoreboth:erasedups

if [[ "$OSTYPE" == "darwin"* ]]; then
    [[ -r "$(brew --prefix)/etc/profile.d/bash_completion.sh" ]] && . "$(brew --prefix)/etc/profile.d/bash_completion.sh"
else
    _completion_loader git
fi

complete -o bashdefault -o default -o nospace -F __git_wrap__git_main cfg

show_node_version() {
    node -v
}

if [[ "$OSTYPE" == "darwin"* ]]; then
  # No colors in Mac OS as they cause problems
  PS1='[N:$(show_node_version)]$(__git_ps1) '$PS1

else
  PS1='\[\e[1m[N:$(show_node_version)]\e[0m\]\[\e[34m$(__git_ps1)\e[0m\] '$PS1
fi

ulimit -n 4096 # Recommendation from https://github.com/carlitux/deoplete-ternjs

# FZF should use fd command

export FZF_DEFAULT_COMMAND='fd'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d"
export FZF_DEFAULT_OPTS='--bind ctrl-d:page-down,ctrl-u:page-up'

# nvim
export EDITOR=nvim

# gpg
GPG_TTY=`tty`
export GPG_TTY

function nvmrc_check() {
  if [[ -f .nvmrc ]]
  then
    fnm use
  fi
}

function cd() {
  builtin cd "$@"
  nvmrc_check
}

nvmrc_check

# Mac OS X stuff

if [[ "$OSTYPE" == "darwin"* ]]; then
    # UTF-8 support in iTerm2
    export LANG="en_US.UTF-8"
fi

# Git auto-completion for git short commands

__git_wrap_git_add() {
    __git_func_wrap _git_add
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_add ga

__git_wrap_git_branch() {
    __git_func_wrap _git_branch
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_branch gb

__git_wrap_git_status() {
    __git_func_wrap _git_status
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_status gs

__git_wrap_git_diff() {
    __git_func_wrap _git_diff
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_diff gd
complete -o bashdefault -o default -o nospace -F __git_wrap_git_diff gds

__git_wrap_git_commit() {
    __git_func_wrap _git_commit
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_commit gci

__git_wrap_git_checkout() {
    __git_func_wrap _git_checkout
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_checkout gco

__git_wrap_git_push() {
    __git_func_wrap _git_push
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_push gps

__git_wrap_git_pull() {
    __git_func_wrap _git_pull
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_pull gpl

__git_wrap_git_log() {
    __git_func_wrap _git_log
}
complete -o bashdefault -o default -o nospace -F __git_wrap_git_log gl
